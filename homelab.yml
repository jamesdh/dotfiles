- hosts: homelab
  become: true
  gather_facts: false

  pre_tasks:
    - name: Get facts from 1Password
      run_once: true
      set_fact:
        ansible_become_password: "{{ lookup('community.general.onepassword', 'Homelab', field='password') }}"
        ansible_user: "{{ lookup('community.general.onepassword', 'Homelab', field='username') }}"
        ansible_ssh_pass: "{{ lookup('community.general.onepassword', 'Homelab', field='password') }}"
    
    - name: Gather facts
      ansible.builtin.gather_facts:

  tasks:
    - name: Update apt
      apt:
        state: latest
        update_cache: true

    - name: Required packages
      apt:
        pkg:
          - curl
          - ca-certificates
          - python3-pip
          - bluez
        state: latest

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Install docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
    
    - name: Python requirements
      ansible.builtin.pip:
        state: latest
        name: 
          - docker
          
    - name: Init a new swarm with default parameters
      community.docker.docker_swarm:
        state: present

    - name: Python requirements
      ansible.builtin.pip:
        state: latest
        name: 
          - jsondiff
          - pyyaml

    - name: Install Portainer
      docker_stack: 
        state: present
        name: portainer
        compose: 
          - version: '3.2'
            services:
              agent:
                image: portainer/agent:2.19.5
                volumes:
                  - /var/run/docker.sock:/var/run/docker.sock
                  - /var/lib/docker/volumes:/var/lib/docker/volumes
                networks:
                  - agent_network
                deploy:
                  mode: global
                  placement:
                    constraints: [node.platform.os == linux]
              portainer:
                image: portainer/portainer-ce:2.19.5
                command: -H tcp://tasks.agent:9001 --tlsskipverify
                ports:
                  - "9443:9443"
                  - "9000:9000"
                  - "8000:8000"
                volumes:
                  - portainer_data:/data
                networks:
                  - agent_network
                deploy:
                  mode: replicated
                  replicas: 1
                  placement:
                    constraints: [node.role == manager]
            networks:
              agent_network:
                driver: overlay
                attachable: true
            volumes:
              portainer_data:

    - name: Install HomeAssistant
      community.docker.docker_container:
        name: homeassistant
        image: "ghcr.io/home-assistant/home-assistant:stable"
        privileged: true
        restart_policy: unless-stopped
        network_mode: host
        volumes:
          - /home/homelab/ha_config:/config
          - /etc/localtime:/etc/localtime:ro
          - /run/dbus:/run/dbus:ro
      
              
              
              
              
