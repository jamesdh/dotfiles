apps_dir: /Applications

finder_dels:
  - 'Recents'
  - 'Creative Cloud Files'
  - 'myDocuments.cannedSearch'

finder_adds:
  - {name: Home, path: "file://{{home_dir}}/"}
  - {name: AirDrop, path: nwnode://domain-AirDrop}
  - {name: Applications, path: "file://{{apps_dir}}/"}
  - {name: Desktop, path: "file://{{home_dir}}/Desktop/"}
  - {name: Documents, path: "file://{{home_dir}}/Documents"}
  - {name: Downloads, path: "file://{{home_dir}}/Downloads/"}
  - {name: Projects, path: "file://{{projects_dir}}"}

nativefier: 
  - {name: Google Maps, url: 'maps.google.com?hl=en'} 
  - {name: Octobox, url: 'octobox.io'}
  - {name: SoundCloud, url: 'soundcloud.com'}
  - {name: myhours, url: 'app.myhours.com'}

defaults:
  
  ui: 
    com.apple.controlcenter:
      "NSStatusItem Visible Display": {type: bool, value: true, desc: "Show display prefs in menu"}
      "NSStatusItem Visible Bluetooth": {type: bool, value: true}
    com.apple.LaunchServices:
      LSQuarantine: {type: bool, value: false, desc: 'Disable the “Are you sure you want to open this application?” dialog'}
    com.apple.menuextra.battery: 
      ShowPercent: {type: string, value: 'NO', desc: Dont show battery percentage remaining}
    com.apple.menuextra.clock:
      DateFormat: {type: string, value: 'h:mm a'}
      FlashDateSeperators: {type: bool, value: false}
      IsAnalog: {type: bool, value: true, desc: 'Set menubar clock to analog'}
      ShowDayOfMonth: {type: bool, value: false}
      ShowDayOfWeek: {type: bool, value: false}
    com.apple.screensaver:
      idleTime: {type: int, value: 0, desc: 'Disable the screensaver'}
    com.apple.universalaccess:
      reduceTransparency: {type: bool, value: true, desc: 'Disable transparency in the menu bar and elsewhere'}
    com.apple.WindowManager:
      EnableStandardClickToShowDesktop: {type: bool, value: false}
    NSGlobalDomain:
      NSAutomaticDashSubstitutionEnabled: {type: bool, value: false, desc: 'Disable smart dashes as they’re annoying when coding'}
      NSAutomaticQuoteSubstitutionEnabled: {type: bool, value: false, desc: 'Disable smart quotes as they’re annoying when coding'}
      NSWindowResizeTime: {type: float, value: 0.001, desc: 'Increase window resize speed for Cocoa applications'}
      NSScrollViewRubberbanding: {type: int, value: 0, desc: 'Disable scrolling rubberband effect'}
  
  devices:
    NSGlobalDomain:
      com.apple.mouse.scaling: {type: float, value: 1.5, desc: 'Mouse: set tracking speed'}
      com.apple.mouse.tapBehavior: {type: int, value: 1, desc: 'Mouse: enable tap to click'}
      com.apple.swipescrolldirection: {type: bool, value: false, desc: 'Scroll: Disable "natural" scrolling'}
      com.apple.trackpad.forceClick: {type: bool, value: true, desc: 'Trackpad: enable force click'}
      com.apple.trackpad.scaling: {type: float, value: 1.5, desc: 'Trackpad: set tracking speed'}
      InitialKeyRepeat: {type: int, value: 15, desc: 'Keyboard: Set initial keypress wait interval'}
      KeyRepeat: {type: int, value: 1, desc: 'Keyboard: Set keypress repeat interval (1 - 15ms, 2 - 30ms, etc)'}
    com.apple.AppleMultitouchMouse:
      MouseButtonDivision: {type: int, value: 55}
      MouseButtonMode: {type: string, value: 'TwoButton'}
      MouseHorizontalScroll: {type: bool, value: false}
      MouseMomentumScroll: {type: bool, value: 1}
      MouseOneFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerHorizSwipeGesture: {type: int, value: 1}
      MouseVerticalScroll: {type: bool, value: true}
      UserPreferences: {type: bool, value: true}
    com.apple.AppleMultitouchTrackpad:
      ActuateDetents: {type: int, value: 1, desc: 'Trackpad: force click'}
      Clicking: {type: int, value: 1, desc: 'Trackpad: enable tap to click'}
      Dragging: {type: int, value: 1, desc: 'Trackpad: enable "tap and half" drag'}
      DragLock: {type: int, value: 1, desc: 'Trackpad: enable drag lock'}
      FirstClickThreshold: {type: int, value: 1, desc: 'Trackpad: first click required force (0 - light, 1 - medium, 2 - firm)'}
      ForceSuppressed: {type: int, value: 0, desc: 'Trackpad: force click'}
      SecondClickThreshold: {type: int, value: 1, desc: 'Trackpad: second click required force (0 - light, 1 - medium, 2 - firm)'}
      TrackpadCornerSecondaryClick: {type: int, value: 0, desc: 'Trackpad: secondary click: disable corners (0 - disabled, 1 - left corner, 2 - right corner)'}
      TrackpadFiveFingerPinchGesture: {type: int, value: 0}
      TrackpadFourFingerHorizSwipeGesture: {type: int, value: 0}
      TrackpadFourFingerPinchGesture: {type: int, value: 0}
      TrackpadFourFingerVertSwipeGesture: {type: int, value: 2}
      TrackpadHandResting: {type: int, value: 1}
      TrackpadHorizScroll: {type: int, value: 1}
      TrackpadMomentumScroll: {type: int, value: 1}
      TrackpadPinch: {type: int, value: 1}
      TrackpadRightClick: {type: int, value: 1, desc: 'Trackpad: secondary click: enable two-finger tap'}
      TrackpadRotate: {type: int, value: 1}
      TrackpadScroll: {type: int, value: 1}
      TrackpadThreeFingerDrag: {type: int, value: 0}
      TrackpadThreeFingerHorizSwipeGesture: {type: int, value: 1}
      TrackpadThreeFingerTapGesture: {type: int, value: 0}
      TrackpadThreeFingerVertSwipeGesture: {type: int, value: 2}
      TrackpadTwoFingerDoubleTapGesture: {type: int, value: 1}
      TrackpadTwoFingerFromRightEdgeSwipeGesture: {type: int, value: 3}
      USBMouseStopsTrackpad: {type: int, value: 0}
    
    com.apple.driver.AppleBluetoothMultitouch.mouse:
      MouseButtonDivision: {type: int, value: 55}
      MouseButtonMode: {type: string, value: 'TwoButton'}
      MouseHorizontalScroll: {type: bool, value: false}
      MouseMomentumScroll: {type: bool, value: 1}
      MouseOneFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerHorizSwipeGesture: {type: int, value: 1}
      MouseVerticalScroll: {type: bool, value: true}
      UserPreferences: {type: bool, value: true}
        
  finder:
    com.apple.desktopservices:
      DSDontWriteNetworkStores: {type: bool, value: true, desc: 'Avoid creating .DS_Store files on network volumes'}
    com.apple.finder:
      DisableAllAnimations: {type: bool, value: true, desc: 'Finder: disable window animations and Get Info animations'}
      FXArrangeGroupViewBy: {type: string, value: 'Name'}
      FXDefaultSearchScope: {type: string, value: "SCcf", desc: 'Finder: search the current folder by default'}
      FXEnableExtensionChangeWarning: {type: bool, value: false, desc: 'Finder: disable the warning when changing a file extension'}
      FXPreferredGroupBy: {type: string, value: 'Kind'}
      FXPreferredViewStyle: {type: string, value: "clmv", desc: 'Finder: use column view in all Finder windows by default (`Nlsv`, `icnv`, `clmv`, `Flwv`)'}
      FXShowPosixPathInTitle: {type: bool, value: true, desc: 'Finder: display full POSIX path as Finder window title'}
      NewWindowTarget: {type: string, value: 'PfHm'}
      NewWindowTargetPath: {type: string, value: 'file://{{home_dir}}'}
      ShowExternalHardDrivesOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for external drives'}
      ShowHardDrivesOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for local hard drive'}
      ShowMountedServersOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for mounted servers'}
      ShowPathbar: {type: bool, value: true, desc: 'Finder: show path bar'}
      ShowRecentTags: {type: bool, value: false, desc: 'Finder: hide tags from sidebar'}
      ShowRemovableMediaOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for removable media'}
      ShowStatusBar: {type: bool, value: true, desc: 'Finder: show status bar'}
      SidebarWidth: {type: float, value: 160, desc: 'Finder: set width of left sidebar'}
      WarnOnEmptyTrash: {type: bool, value: false, desc: 'Finder: disable the warning before emptying the Trash'}
      _FXSortFoldersFirst: {type: bool, value: true, desc: 'Finder: keep folders on top when sorting by name'}
    NSGlobalDomain:
      AppleShowAllExtensions: {type: bool, value: true, desc: 'Finder: show all filename extensions'}
      NSNavPanelExpandedStateForSaveMode: {type: bool, value: true, desc: 'Finder: make the expanded save panel the default'}
      NSNavPanelExpandedStateForSaveMode2: {type: bool, value: true, desc: 'Finder: make the expanded save panel the default'}
  
  dock:
    com.apple.dashboard:
      mcx-disabled: {type: bool, value: true, desc: 'Dock: disable Dashboard'}
    com.apple.dock: 
      autohide: {type: bool, value: true, desc: 'Dock: automatically hide and show the Dock'}
      dashboard-in-overlay: {type: bool, value: true, desc: 'Dock: dont show Dashboard as a Space'}
      minimize-to-application: {type: bool, value: true, desc: 'Dock: minimize windows into their app icon'}
      mru-spaces: {type: bool, value: false, desc: 'Dock: dont automatically rearrange Spaces based on most recent use'}
      orientation: {type: string, value: bottom, desc: 'Dock: move the dock to the bottom of the screen'}
      persistent-apps: {type: array, value: [], desc: 'Dock: wipe all (default) app icons'}
      showhidden: {type: bool, value: true, desc: 'Dock: make Dock icons of hidden apps translucent'}
      showLaunchpadGestureEnabled: {type: int, value: 0, desc: 'Dock: disable the Launchpad gesture (pinch with thumb and three fingers)'}
      show-recents: {type: bool, value: false, desc: 'Dock: hide recent items'}
      static-only: {type: bool, value: true, desc: 'Dock: show only open apps'}
      tilesize: {type: int, value: 32, desc: 'Set Dock icons to 32 pixels'}
      "wvous-br-corner": {type: int, value: 1, desc: 'Turn off Notes hot corner'}
      "wvous-br-modifier": {type: int, value: 0, desc: 'Turn off hot corners'}
  
  safari:
    com.apple.Safari:
      AutoFillCreditCardData: {type: bool, value: true, desc: 'Safari: do autofill credit cards'}
      AutoFillFromAddressBook: {type: bool, value: false, desc: 'Safari: do not autofill addresses'}
      AutoFillMiscellaneousForms: {type: bool, value: false, desc: 'Safari: do not autofill other forms'}
      AutoFillPasswords: {type: bool, value: false, desc: 'Safari: do not autofill passwords'}
      AutoOpenSafeDownloads: {type: bool, value: false, desc: 'Safari: prevent Safari from opening ‘safe’ files automatically after downloading'}
      DebugSnapshotsUpdatePolicy: {type: int, value: 2, desc: 'Safari: disable thumbnail cache for History and Top Sites'}
      FindOnPageMatchesWordStartsOnly: {type: bool, value: false, desc: 'Safari: search banners default to Contains instead of Starts With'}
      FinderSpawnTab: {type: bool, value: false}
      HomePage: {type: string, value: 'about:blank', desc: 'Safari: set home page to `about:blank` for faster loading'}
      IncludeDevelopMenu: {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
      IncludeInternalDebugMenu: {type: bool, value: true, desc: 'Safari: enable debug menu'}
      ProxiesInBookmarksBar: {type: array, value: [], desc: 'Safari: remove useless icons from bookmarks bar'}
      ShowExternalHardDrivesOnDesktop: {type: bool, value: false}
      ShowFullURLInSmartSearchField: {type: bool, value: true, desc: 'Safari: show the full URL in the address bar (note: this still hides the scheme)'}
      ShowHardDrivesOnDesktop: {type: bool, value: false}
      ShowIconsInTabs: {type: bool, value: true, desc: 'Safari: show favicons in tabs'}
      ShowMountedServersOnDesktop: {type: bool, value: false}
      ShowOverlayStatusBar: {type: bool, value: true, desc: 'Safari: show bottom status bar' }
      ShowRemovableMediaOnDesktop: {type: bool, value: false}
      ShowSidebarInTopSites: {type: bool, value: false, desc: 'Safari: hide sidebar in Top Sites'}
      SuppressSearchSuggestions: {type: bool, value: true, desc: 'Safari: dont show search suggestions'}
      UniversalSearchEnabled: {type: bool, value: false, desc: 'Safari: dont send search queries to Apple'}
      WebKitDeveloperExtrasEnabledPreferenceKey: {type: bool, value: true, desc: 'Safari: enable the Web Inspector'}
      WebKitTabToLinksPreferenceKey: {type: bool, value: true, desc: 'Safari: fix keyboard/accessibility access'}
      "ShowFavoritesBar-v2": {type: bool, value: true, desc: 'Safari: show bookmarks bar by default'}
      "WebKitPreferences.developerExtrasEnabled": {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
      "WebKitPreferences.tabFocusesLinks": {type: bool, value: true, desc: 'Safari: fix keyboard/accesibility access'}
    com.apple.Safari.SandboxBroker:
      ShowDevelopMenu: {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
    NSGlobalDomain:
      WebKitDeveloperExtras: {type: bool, value: true, desc: 'Safari: add a context menu item for showing the Web Inspector in web views'}
  
  timemachine:
    com.apple.TimeMachine:
      DoNotOfferNewDisksForBackup: {type: bool, value: true, desc: 'Prevent Time Machine from prompting to use new hard drives as backup volume'}
  
  sysapps: 
    com.apple.AppStore:
      ASAcknowledgedOnboardingVersion: {type: int, value: 5}
    com.apple.sidecar.display:
      showTouchBar: {type: bool, value: false} 
      sidebarShown: {type: bool, value: false}
    com.apple.ActivityMonitor:
      IconType: {type: int, value: 5, desc: 'Visualize CPU usage in the Dock icon'}
      OpenMainWindow: {type: bool, value: true, desc: 'Show the main window when launching'}
      ShowCategory: {type: int, value: 0, desc: 'Show all processes'}
      ShowDebugMenu: {type: bool, value: true, desc: 'Enable Debug Menu in the Mac App Store'}
      SortColumn: {type: string, value: 'CPUUsage', desc: 'Sort results by CPU usage'}
      SortDirection: {type: int, value: 0, desc: 'Sort results descending'}
      WebKitDeveloperExtras: {type: bool, value: true, desc: 'Enable the WebKit Developer Tools in the Mac App Store'}
    "com.apple.iCal": {
      "Show Week Numbers": {type: bool, value: false}
    }
    com.apple.ImageCapture:
      disableHotPlug: {type: bool, value: true, host: currentHost, desc: 'Stop Photos from opening automatically'}
    com.apple.assistant.support:
      "Assistant Enabled": {type: bool, value: false}
    com.apple.iTunes:
      dontAutomaticallySyncIPods: {type: bool, value: true}
    com.apple.screencapture:
      disable-shadow: {type: bool, value: true, desc: 'Disable shadow in screenshots'}
      location: {type: string, value: '{{ home_dir }}/Desktop', desc: 'Save screenshots to Desktop'}
      show-thumbnail: {type: bool, value: false}
    com.apple.scriptmenu:
      ScriptMenuEnabled: {type: bool, value: false}
    com.apple.Siri:
      StatusMenuVisible: {type: bool, value: false}
    com.apple.Terminal: 
      Startup Window Settings: {type: string, value: 'Pro'}

  userapps: 
    com.mizage.Divvy:
      defaultColumnCount: {type: int, value: 12}
      defaultRowCount: {type: int, value: 12}
      defaultWindowMarginHeight: {type: int, value: 10}
      defaultWindowMarginWidth: {type: int, value: 10}
      # globalHotkey: See https://github.com/ansible/ansible/pull/24808
      globalHotkey: {type: dict, value: {keyCode: 2, modifiers: 768}}
      lastColumnCount: {type: int, value: 10}
      lastRowCount: {type: int, value: 12}
      # shortcuts: See https://github.com/ansible/ansible/pull/24808
      shortcuts: {type: data, value: "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"}
      showMenuIcon: {type: bool, value: false}
      SuppressImportDialog: {type: bool, value: true}
      useDefaultGrid: {type: bool, value: true}
      useGlobalHotkey: {type: bool, value: true}
      useMonitorCycling: {type: bool, value: true}
    com.mizage.shush:
      doubleTapLock: {type: bool, value: true}
    com.contextsformac.Contexts:
      CTAppearanceTheme: {type: string, value: 'CTAppearanceNamedVibrantDark'}
      CTKeyboardEventCommandModeActive: {type: bool, value: false}
      CTPreferenceAppearanceContentSizeCategory: {type: int, value: 1}
      CTPreferenceAppearanceContrastLevel: {type: int, value: 0}
      CTPreferenceInputSourceIdToUse: {type: string, value: 'kCTInputSourceIdNone'}
      CTPreferencePanelDisplayMode: {type: string, value: 'CTDisplayModeMenubarScreen'}
      CTPreferencePanelRecentItemsSwitcherKeyType: {type: string, value: 'CTPreferencePanelRecentItemsSwitcherKeyType'}
      CTPreferencePanelWidth: {type: int, value: 0}
      CTPreferenceSearchShortcutFunctionKeyEnabled: {type: bool, value: false}
      CTPreferenceSidebarDisplayMode: {type: string, value: 'CTDisplayModeNone'}
      CTPreferenceSidebarShowDockIconStatus: {type: bool, value: true}
      CTPreferenceWorkspaceConstrainWindowFrames: {type: bool, value: false}
      CTPreferenceWorkspacePressDockIconWhenActivatingApplication: {type: bool, value: true}
    com.fournova.Tower3:
      GTUserDefaultsAlwaysDiscardDiffContent: {type: bool, value: 1}
      GTUserDefaultsDefaultCloningDirectory: {type: string, value: "{{projects_dir}}"}
      GTUserDefaultsDefaultTerminalApplication: {type: string, value: 'com.googlecode.iterm2'}
      GTUserDefaultsDiffToolIdentifier: {type: string, value: 'p4merge'}
      GTUserDefaultsMergeToolIdentifier: {type: string, value: 'p4merge'}
      GTUserDefaultsColorSyntax: {type: bool, value: 1}
      GTUserDefaultsColorSyntaxInDiffs: {type: bool, value: 1}
      GTUserDefaultsGettingStartedPassed: {type: bool, value: 1}
      GTUserDefaultsShowInvisibleCharacters: {type: bool, value: 1}
      SUHasLaunchedBefore: {type: bool, value: 1}
    com.surteesstudios.Bartender:
      license2: {type: string, value: "{{ lookup('community.general.onepassword', 'License: Bartender 3', field='license key') }}"}
      license2HoldersName: {type: string, value: "{{ lookup('community.general.onepassword', 'License: Bartender 3', field='licensee') }}"}
    com.viscosityvpn.Viscosity:
      DisableTimeMachine: {type: bool, value: true, desc: 'Disable Time Machine backups while on VPN'}
      DisplayWelcome: {type: bool, value: false, desc: 'Disable startup dialogs'}
      MenuBarIcons: {type: string, value: 'Leopard Gray'}
      OfferedToImportApps: {type: bool, value: true, desc: 'Disable startup dialogs'}
      ReconnectOnWake: {type: bool, value: false}
      SUEnableAutomaticChecks: {type: bool, value: true}
    com.vmware.fusion:
      showStartMenu3: {type: integer, value: 0, desc: 'Remove VMWare icon from system menu'}
    com.googlecode.iterm2:
      AdjustWindowForFontSizeChange: {type: bool, value: false}
      HideScrollbar: {type: bool, value: false}
      PreventEscapeSequenceFromChangingProfile: {type: bool, value: false}
      OnlyWhenMoreTabs: {type: bool, value: false}
      PreserveWindowSizeWhenTabBarVisibilityChanges: {type: bool, value: true}
      AlternateMouseScroll: {type: bool, value: true, desc: 'Allow mouse scrolling'}
      DisableWindowSizeSnap: {type: bool, value: true, desc: 'Allow window to resize correctly'}
      NoSyncPermissionToShowTip: {type: bool, value: false, desc: 'Disable tips on startup'}
      PromptOnQuit: {type: bool, value: false}
      SUEnableAutomaticChecks: {type: bool, value: false, desc: 'Disable auto check for updates'}
    com.twopeoplesoftware.InstantTranslate-nomas:
      SUEnableAutomaticChecks: {type: bool, value: true}
      SUSendProfileInfo: {type: bool, value: false}
    pl.maketheweb.TopNotch:
      hideOnBuiltInOnly: {type: bool, value: true}
      isEnabled: {type: bool, value: true}
    com.raycast.macos:
      raycastGlobalHotkey: {type: string, value: 'Command-49'}

contexts: 
  license_path: "{{ home_dir }}/Library/Application\ Support/com.contextsformac.Contexts/license.contexts-license"
  license_url: "{{ lookup('community.general.onepassword', 'License: Contexts', field='License Link') }}"
  license_key: "{{ lookup('community.general.onepassword', 'License: Contexts', field='license key') }}"

tower: 
  license_path: "{{ home_dir }}/Library/Application\ Support/com.fournova.Tower3/extendedLicenseInfo.json"
  license_url: "{{ lookup('community.general.onepassword', 'Git-tower', field='registration') }}"

code: 
  config_path: "{{ home_dir }}/.vscode"

iterm: 
  app_dir: "{{ home_dir }}/Library/Application\ Support/iTerm2"
  dynamic_profile_dir: "{{ home_dir }}/Library/Application\ Support/iTerm2/DynamicProfiles"
  autorun_dir: "{{ home_dir }}/Library/Application\ Support/iTerm2/Scripts/AutoLaunch"

ngrok:
  authtoken: "{{ lookup('community.general.onepassword', 'License: ngrok', field='license key') }}"

viscosity: 
  - ExpressVPN - Denver
  - ExpressVPN - New Jersey 1
  - ExpressVPN - New Jersey 3

