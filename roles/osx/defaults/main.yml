apps_dir: /Applications

finder_dels:
  - 'Recents.cannedsearch'
  - 'Creative Cloud Files'

finder_adds:
  - {name: james, path: "file://{{home_dir}}/"}
  - {name: AirDrop, path: nwnode://domain-AirDrop}
  - {name: Applications, path: "file://{{apps_dir}}/"}
  - {name: Desktop, path: "file://{{home_dir}}/Desktop/"}
  - {name: Documents, path: "file://{{home_dir}}/Documents"}
  - {name: Downloads, path: "file://{{home_dir}}/Downloads/"}
  - {name: Projects, path: "file://{{projects_dir}}"}

defaults:
  
  ui: 
    com.apple.LaunchServices:
      LSQuarantine: {type: bool, value: false, desc: 'Disable the “Are you sure you want to open this application?” dialog'}
    com.apple.menuextra.battery: 
      ShowPercent: {type: string, value: 'NO', desc: Dont show battery percentage remaining}
    com.apple.menuextra.clock:
      IsAnalog: {type: bool, value: true, desc: 'Set menubar clock to analog'}
    com.apple.screensaver:
      idleTime: {type: int, value: 0, desc: 'Disable the screensaver'}
    com.apple.systempreferences:
      NSQuitAlwaysKeepsWindows: {type: bool, value: false, desc: 'Disable Resume system-wide'}
    com.apple.systemuiserver:
      "NSStatusItem Visible Siri": {type: bool, value: false, desc: 'Disable Siri menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.TimeMachine": {type: bool, value: true, desc: 'Enable Time Machine menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.airplay": {type: bool, value: true, desc: 'Enable AirPlay menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.airport": {type: bool, value: true, desc: 'Enable wifi menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.battery": {type: bool, value: true, desc: 'Enable power menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.bluetooth": {type: bool, value: true, desc: 'Enable bluetooth menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.clock": {type: bool, value: true, desc: 'Enable clock menubar icon'}
      "NSStatusItem Visible com.apple.menuextra.volume": {type: bool, value: true, desc: 'Enable volume menubar icon'}
      menuExtras: {type: array, value: [
        "/System/Library/CoreServices/Menu Extras/Clock.menu",
        "/System/Library/CoreServices/Menu Extras/AirPort.menu",
        "/System/Library/CoreServices/Menu Extras/Bluetooth.menu",
        "/System/Library/CoreServices/Menu Extras/Displays.menu",
        "/System/Library/CoreServices/Menu Extras/Battery.menu",
        "/System/Library/CoreServices/Menu Extras/Volume.menu",
        "/System/Library/CoreServices/Menu Extras/Clock.menu"
        ], desc: 'Enable system menubar icon'}
    com.apple.universalaccess:
      reduceTransparency: {type: bool, value: true, desc: 'Disable transparency in the menu bar and elsewhere'}
    NSGlobalDomain:
      NSAutomaticDashSubstitutionEnabled: {type: bool, value: false, desc: 'Disable smart dashes as they’re annoying when coding'}
      NSAutomaticQuoteSubstitutionEnabled: {type: bool, value: false, desc: 'Disable smart quotes as they’re annoying when coding'}
      NSWindowResizeTime: {type: float, value: 0.001, desc: 'Increase window resize speed for Cocoa applications'}
      NSScrollViewRubberbanding: {type: int, value: 0, desc: 'Disable scrolling rubberband effect'}
  
  devices:
    NSGlobalDomain:
      com.apple.mouse.scaling: {type: float, value: 1.5, desc: 'Mouse: set tracking speed'}
      com.apple.mouse.tapBehavior: {type: int, value: 1, desc: 'Mouse: enable tap to click'}
      com.apple.swipescrolldirection: {type: bool, value: false, desc: 'Scroll: Disable "natural" scrolling'}
      com.apple.trackpad.forceClick: {type: bool, value: true, desc: 'Trackpad: enable force click'}
      com.apple.trackpad.scaling: {type: float, value: 0.875, desc: 'Trackpad: set tracking speed'}
      InitialKeyRepeat: {type: int, value: 15, desc: 'Keyboard: Set initial keypress wait interval'}
      KeyRepeat: {type: int, value: 1, desc: 'Keyboard: Set keypress repeat interval (1 - 15ms, 2 - 30ms, etc)'}
    com.apple.AppleMultitouchMouse:
      MouseButtonDivision: {type: int, value: 55}
      MouseButtonMode: {type: string, value: 'TwoButton'}
      MouseHorizontalScroll: {type: bool, value: false}
      MouseMomentumScroll: {type: bool, value: 1}
      MouseOneFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerHorizSwipeGesture: {type: int, value: 1}
      MouseVerticalScroll: {type: bool, value: true}
      UserPreferences: {type: bool, value: true}
    com.apple.AppleMultitouchTrackpad:
      ActuateDetents: {type: int, value: 1, desc: 'Trackpad: force click'}
      Clicking: {type: int, value: 1, desc: 'Trackpad: enable tap to click'}
      Dragging: {type: int, value: 1, desc: 'Trackpad: enable "tap and half" drag'}
      DragLock: {type: int, value: 1, desc: 'Trackpad: enable drag lock'}
      FirstClickThreshold: {type: int, value: 1, desc: 'Trackpad: first click required force (0 - light, 1 - medium, 2 - firm)'}
      ForceSuppressed: {type: int, value: 0, desc: 'Trackpad: force click'}
      SecondClickThreshold: {type: int, value: 1, desc: 'Trackpad: second click required force (0 - light, 1 - medium, 2 - firm)'}
      TrackpadCornerSecondaryClick: {type: int, value: 0, desc: 'Trackpad: secondary click: disable corners (0 - disabled, 1 - left corner, 2 - right corner)'}
      TrackpadFiveFingerPinchGesture: {type: int, value: 0}
      TrackpadFourFingerHorizSwipeGesture: {type: int, value: 0}
      TrackpadFourFingerPinchGesture: {type: int, value: 0}
      TrackpadFourFingerVertSwipeGesture: {type: int, value: 2}
      TrackpadHandResting: {type: int, value: 1}
      TrackpadHorizScroll: {type: int, value: 1}
      TrackpadMomentumScroll: {type: int, value: 1}
      TrackpadPinch: {type: int, value: 1}
      TrackpadRightClick: {type: int, value: 1, desc: 'Trackpad: secondary click: enable two-finger tap'}
      TrackpadRotate: {type: int, value: 1}
      TrackpadScroll: {type: int, value: 1}
      TrackpadThreeFingerDrag: {type: int, value: 0}
      TrackpadThreeFingerHorizSwipeGesture: {type: int, value: 1}
      TrackpadThreeFingerTapGesture: {type: int, value: 0}
      TrackpadThreeFingerVertSwipeGesture: {type: int, value: 2}
      TrackpadTwoFingerDoubleTapGesture: {type: int, value: 1}
      TrackpadTwoFingerFromRightEdgeSwipeGesture: {type: int, value: 3}
      USBMouseStopsTrackpad: {type: int, value: 0}
    com.apple.BluetoothAudioAgent:
      "Apple Bitpool Min (editable)": {type: int, value: 60, desc: 'Bluetooth: improve bluetooth audio quality'}
    com.apple.driver.AppleBluetoothMultitouch.mouse:
      MouseButtonDivision: {type: int, value: 55}
      MouseButtonMode: {type: string, value: 'TwoButton'}
      MouseHorizontalScroll: {type: bool, value: false}
      MouseMomentumScroll: {type: bool, value: 1}
      MouseOneFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerDoubleTapGesture: {type: int, value: 0}
      MouseTwoFingerHorizSwipeGesture: {type: int, value: 1}
      MouseVerticalScroll: {type: bool, value: true}
      UserPreferences: {type: bool, value: true}
    
  touchbar: 
    com.apple.controlstrip: 
      FullCustomized: {type: array, value: [NSTouchBarItemIdentifierFlexibleSpace,
            "com.apple.system.mission-control",
            "com.apple.system.night-shift",
            "com.apple.system.brightness",
            NSTouchBarItemIdentifierFlexibleSpace,
            "com.apple.system.group.media",
            NSTouchBarItemIdentifierFlexibleSpace,
            "com.apple.system.mute",
            "com.apple.system.volume",
            NSTouchBarItemIdentifierFlexibleSpace,
            "com.apple.system.do-not-disturb",
            "com.apple.system.screen-lock"]}
    com.apple.touchbar.agent:
      PresentationModeGlobal: {type: string, value: 'fullControlStrip'}
      
  finder:
    com.apple.desktopservices:
      DSDontWriteNetworkStores: {type: bool, value: true, desc: 'Avoid creating .DS_Store files on network volumes'}
    com.apple.finder:
      DisableAllAnimations: {type: bool, value: true, desc: 'Finder: disable window animations and Get Info animations'}
      FXArrangeGroupViewBy: {type: string, value: 'Name'}
      FXDefaultSearchScope: {type: string, value: "SCcf", desc: 'Finder: search the current folder by default'}
      FXEnableExtensionChangeWarning: {type: bool, value: false, desc: 'Finder: disable the warning when changing a file extension'}
      FXPreferredGroupBy: {type: string, value: 'Kind'}
      FXPreferredViewStyle: {type: string, value: "clmv", desc: 'Finder: use column view in all Finder windows by default (`Nlsv`, `icnv`, `clmv`, `Flwv`)'}
      FXShowPosixPathInTitle: {type: bool, value: true, desc: 'Finder: display full POSIX path as Finder window title'}
      NewWindowTarget: {type: string, value: 'PfHm'}
      NewWindowTargetPath: {type: string, value: 'file://{{home_dir}}'}
      ShowExternalHardDrivesOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for external drives'}
      ShowHardDrivesOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for local hard drive'}
      ShowMountedServersOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for mounted servers'}
      ShowPathbar: {type: bool, value: true, desc: 'Finder: show path bar'}
      ShowRecentTags: {type: bool, value: false, desc: 'Finder: hide tags from sidebar'}
      ShowRemovableMediaOnDesktop: {type: bool, value: true, desc: 'Finder: show desktop icons for removable media'}
      ShowStatusBar: {type: bool, value: true, desc: 'Finder: show status bar'}
      SidebarWidth: {type: float, value: 160, desc: 'Finder: set width of left sidebar'}
      WarnOnEmptyTrash: {type: bool, value: false, desc: 'Finder: disable the warning before emptying the Trash'}
      _FXSortFoldersFirst: {type: bool, value: true, desc: 'Finder: keep folders on top when sorting by name'}
    NSGlobalDomain:
      AppleShowAllExtensions: {type: bool, value: true, desc: 'Finder: show all filename extensions'}
      NSNavPanelExpandedStateForSaveMode: {type: bool, value: true, desc: 'Finder: make the expanded save panel the default'}
      NSNavPanelExpandedStateForSaveMode2: {type: bool, value: true, desc: 'Finder: make the expanded save panel the default'}
  
  dock:
    com.apple.dashboard:
      mcx-disabled: {type: bool, value: true, desc: 'Dock: disable Dashboard'}
    com.apple.dock: 
      autohide: {type: bool, value: true, desc: 'Dock: automatically hide and show the Dock'}
      dashboard-in-overlay: {type: bool, value: true, desc: 'Dock: dont show Dashboard as a Space'}
      minimize-to-application: {type: bool, value: true, desc: 'Dock: minimize windows into their app icon'}
      mru-spaces: {type: bool, value: false, desc: 'Dock: dont automatically rearrange Spaces based on most recent use'}
      orientation: {type: string, value: bottom, desc: 'Dock: move the dock to the bottom of the screen'}
      persistent-apps: {type: array, value: [], desc: 'Dock: wipe all (default) app icons'}
      showhidden: {type: bool, value: true, desc: 'Dock: make Dock icons of hidden apps translucent'}
      showLaunchpadGestureEnabled: {type: int, value: 0, desc: 'Dock: disable the Launchpad gesture (pinch with thumb and three fingers)'}
      show-recents: {type: bool, value: false, desc: 'Dock: hide recent items'}
      static-only: {type: bool, value: true, desc: 'Dock: show only open apps'}
      tilesize: {type: int, value: 32, desc: 'Set Dock icons to 32 pixels'}
  
  safari:
    com.apple.Safari:
      AutoFillCreditCardData: {type: bool, value: true, desc: 'Safari: do autofill credit cards'}
      AutoFillFromAddressBook: {type: bool, value: false, desc: 'Safari: do not autofill addresses'}
      AutoFillMiscellaneousForms: {type: bool, value: false, desc: 'Safari: do not autofill other forms'}
      AutoFillPasswords: {type: bool, value: false, desc: 'Safari: do not autofill passwords'}
      AutoOpenSafeDownloads: {type: bool, value: false, desc: 'Safari: prevent Safari from opening ‘safe’ files automatically after downloading'}
      DebugSnapshotsUpdatePolicy: {type: int, value: 2, desc: 'Safari: disable thumbnail cache for History and Top Sites'}
      FindOnPageMatchesWordStartsOnly: {type: bool, value: false, desc: 'Safari: search banners default to Contains instead of Starts With'}
      HomePage: {type: string, value: 'about:blank', desc: 'Safari: set home page to `about:blank` for faster loading'}
      IncludeDevelopMenu: {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
      IncludeInternalDebugMenu: {type: bool, value: true, desc: 'Safari: enable debug menu'}
      ProxiesInBookmarksBar: {type: array, value: [], desc: 'Safari: remove useless icons from bookmarks bar'}
      ShowFullURLInSmartSearchField: {type: bool, value: true, desc: 'Safari: show the full URL in the address bar (note: this still hides the scheme)'}
      ShowOverlayStatusBar: {type: bool, value: true, desc: 'Safari: show bottom status bar' }
      ShowSidebarInTopSites: {type: bool, value: false, desc: 'Safari: hide sidebar in Top Sites'}
      SuppressSearchSuggestions: {type: bool, value: true, desc: 'Safari: dont show search suggestions'}
      UniversalSearchEnabled: {type: bool, value: false, desc: 'Safari: dont send search queries to Apple'}
      WebKitDeveloperExtrasEnabledPreferenceKey: {type: bool, value: true, desc: 'Safari: enable the Web Inspector'}
      "ShowFavoritesBar-v2": {type: bool, value: true, desc: 'Safari: show bookmarks bar by default'}
      "WebKitPreferences.developerExtrasEnabled": {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
    com.apple.Safari.SandboxBroker:
      ShowDevelopMenu: {type: bool, value: true, desc: 'Safari: enable the Develop menu'}
    NSGlobalDomain:
      WebKitDeveloperExtras: {type: bool, value: true, desc: 'Safari: add a context menu item for showing the Web Inspector in web views'}
  
  timemachine:
    com.apple.TimeMachine:
      DoNotOfferNewDisksForBackup: {type: bool, value: true, desc: 'Prevent Time Machine from prompting to use new hard drives as backup volume'}
  
  sysapps: 
    com.apple.ActivityMonitor:
      IconType: {type: int, value: 5, desc: 'Visualize CPU usage in the Dock icon'}
      OpenMainWindow: {type: bool, value: true, desc: 'Show the main window when launching'}
      ShowCategory: {type: int, value: 0, desc: 'Show all processes'}
      ShowDebugMenu: {type: bool, value: true, desc: 'Enable Debug Menu in the Mac App Store'}
      SortColumn: {type: string, value: 'CPUUsage', desc: 'Sort results by CPU usage'}
      SortDirection: {type: int, value: 0, desc: 'Sort results descending'}
      WebKitDeveloperExtras: {type: bool, value: true, desc: 'Enable the WebKit Developer Tools in the Mac App Store'}
    com.apple.ImageCapture:
      disableHotPlug: {type: bool, value: true, host: currentHost, desc: 'Stop Photos from opening automatically'}
    com.apple.screencapture:
      disable-shadow: {type: bool, value: true, desc: 'Disable shadow in screenshots'}
      location: {type: string, value: '~/Desktop', desc: 'Save screenshots to Desktop'}
    com.apple.scriptmenu:
      ScriptMenuEnabled: {type: bool, value: false}
    com.apple.Terminal: 
      Startup Window Settings: {type: string, value: 'Pro'}

  userapps: 
    com.mizage.Divvy:
      defaultColumnCount: {type: int, value: 10}
      defaultRowCount: {type: int, value: 10}
      defaultWindowMarginHeight: {type: int, value: 10}
      defaultWindowMarginWidth: {type: int, value: 10}
      # globalHotkey: See https://github.com/ansible/ansible/pull/24808
      lastColumnCount: {type: int, value: 10}
      lastRowCount: {type: int, value: 10}
      # shortcuts: See https://github.com/ansible/ansible/pull/24808
      showMenuIcon: {type: bool, value: false}
      SuppressImportDialog: {type: bool, value: true}
      useDefaultGrid: {type: bool, value: true}
      useGlobalHotkey: {type: bool, value: true}
      useMonitorCycling: {type: bool, value: true}
    com.contextsformac.Contexts:
      CTAppearanceTheme: {type: string, value: 'CTAppearanceNamedVibrantDark'}
      CTKeyboardEventCommandModeActive: {type: bool, value: false}
      CTPreferenceAppearanceContentSizeCategory: {type: int, value: 1}
      CTPreferenceAppearanceContrastLevel: {type: int, value: 0}
      CTPreferenceInputSourceIdToUse: {type: string, value: 'kCTInputSourceIdNone'}
      CTPreferencePanelDisplayMode: {type: string, value: 'CTDisplayModeMenubarScreen'}
      CTPreferencePanelRecentItemsSwitcherKeyType: {type: string, value: 'CTPreferencePanelRecentItemsSwitcherKeyType'}
      CTPreferencePanelWidth: {type: int, value: 0}
      CTPreferenceSearchShortcutFunctionKeyEnabled: {type: bool, value: false}
      CTPreferenceSidebarDisplayMode: {type: string, value: 'CTDisplayModeNone'}
      CTPreferenceSidebarShowDockIconStatus: {type: bool, value: true}
      CTPreferenceWorkspaceConstrainWindowFrames: {type: bool, value: false}
      CTPreferenceWorkspacePressDockIconWhenActivatingApplication: {type: bool, value: true}
    com.fournova.Tower3:
      GTUserDefaultsDefaultCloningDirectory: {type: string, value: "{{projects_dir}}"}
      GTUserDefaultsDefaultTerminalApplication: {type: string, value: 'com.googlecode.iterm2'}
      GTUserDefaultsDiffToolIdentifier: {type: string, value: 'p4merge'}
      GTUserDefaultsMergeToolIdentifier: {type: string, value: 'p4merge'}
    com.lastpass.LastPass:
      "global_StartOnLogin": {type: string, value: 1}
    com.surteesstudios.Bartender:
      license2: {type: string, value: "{{ lookup('lastpass', 'License:Bartender3', field='License Key') }}"}
      license2HoldersName: {type: string, value: "{{ lookup('lastpass', 'License:Bartender3', field='Licensee') }}"}
    com.viscosityvpn.Viscosity:
      DisableTimeMachine: {type: bool, value: true, desc: 'Disable Time Machine backups while on VPN'}
      DisplayWelcome: {type: bool, value: true, desc: 'Disable startup dialogs'}
      MenuBarIcons: {type: string, value: 'Leopard Gray'}
      OfferedToImportApps: {type: bool, value: true, desc: 'Disable startup dialogs'}
      ReconnectOnWake: {type: bool, value: false}
      SUEnableAutomaticChecks: {type: bool, value: true}
    com.vmware.fusion:
      showStartMenu3: {type: integer, value: 0, desc: 'Remove VMWare icon from system menu'}
    com.googlecode.iterm2:
      AlternateMouseScroll: {type: bool, value: true, desc: 'Allow mouse scrolling'}
      DisableWindowSizeSnap: {type: bool, value: true, desc: 'Allow window to resize correctly'}
      PromptOnQuit: {type: bool, value: false}
      SUEnableAutomaticChecks: {type: bool, value: false, desc: 'Disable auto check for updates'}

  manual:
    com.mizage.Divvy:
      globalHotkey: -dict keyCode 2 modifiers 768 

divvy:
  url: divvy://import/YnBsaXN0MDDUAQIDBAUGmZpYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoK8QGgcIGC8wNz9ASUpUVV1eZmdvcHh5gYKKi5OUVSRudWxs0gkKCxdaTlMub2JqZWN0c1YkY2xhc3OrDA0ODxAREhMUFRaAAoAFgAeACYALgA2AD4ARgBOAFYAXgBndGRobHB0KHh8gISIjJCUmJygoKiYrJSwtJy5Yc2l6ZVJvd3NfEA9zZWxlY3Rpb25FbmRSb3dfEBFzZWxlY3Rpb25TdGFydFJvd1pzdWJkaXZpZGVkVmdsb2JhbF8QEnNlbGVjdGlvbkVuZENvbHVtbldlbmFibGVkW3NpemVDb2x1bW5zV25hbWVLZXlca2V5Q29tYm9Db2RlXxAUc2VsZWN0aW9uU3RhcnRDb2x1bW5da2V5Q29tYm9GbGFncxAIEAcQAAgIgAQJgAMQAxIAEAAAVEZ1bGzSMTIzNFokY2xhc3NuYW1lWCRjbGFzc2VzWFNob3J0Y3V0ojU2WFNob3J0Y3V0WE5TT2JqZWN03RkaGxwdCh4fICEiIyQlJicoKCotKyU8PSc+CAiABAmABhAlEgAQAABZTGVmdCBIYWxm3RkaGxwdCh4fICEiIyQlJicoKComKyVFRkdICAiABAmACBAPEAQSABAAAFpSaWdodCBIYWxm3RkaGxwdCh4fICEiIyRLTCcoKCpQK0tSJydTEAoQCQgIgAQQBQmAChIAEAAAW0xlZnQgMy81dGhz3RkaGxwdCh4fICEiIyRLTCcoKCpMK0taUFtcCAiABAmADBAGEgAQAABcUmlnaHQgMi81dGhz3RkaGxwdCh4fICEiIyRLRycoKCpMK0tjZFtlCAiABAmADhAREgAQAABfEBBSaWdodCBUb3AgMi81dGhz3RkaGxwdCh4fICEiIyRLTFAoKCpMK0tsbVtuCAiABAmAEBALEgAQAABfEBNSaWdodCBCb3R0b20gMi81dGhz3RkaGxwdCh4fICEiIyRLRycoKCpHK0t1did3CAiABAmAEhASEgAQAABdTGVmdCBUb3AgSGFsZt0ZGhscHQoeHyAhIiMkS0xQKCgqRytLfn8ngAgIgAQJgBQQExIAEAAAXxAQTGVmdCBCb3R0b20gSGFsZt0ZGhscHQoeHyAhIiMkS0cnKCgqTCtLh4hQiQgIgAQJgBYQFBIAEAAAXlJpZ2h0IFRvcCBIYWxm3RkaGxwdCh4fICEiIyRLTFAoKCpMK0uQkVCSCAiABAmAGBAVEgAQAABfEBFSaWdodCBCb3R0b20gSGFsZtIxMpWWXk5TTXV0YWJsZUFycmF5o5WXmFdOU0FycmF5WE5TT2JqZWN0XxAPTlNLZXllZEFyY2hpdmVy0ZucVHJvb3SAAQAIABEAGgAjAC0AMgA3AFQAWgBfAGoAcQB9AH8AgQCDAIUAhwCJAIsAjQCPAJEAkwCVALAAuQDLAN8A6gDxAQYBDgEaASIBLwFGAVQBVgFYAVoBWwFcAV4BXwFhAWMBaAFtAXIBfQGGAY8BkgGbAaQBvwHAAcEBwwHEAcYByAHNAdcB8gHzAfQB9gH3AfkB+wH9AgICDQIoAioCLAItAi4CMAIyAjMCNQI6AkYCYQJiAmMCZQJmAmgCagJvAnwClwKYApkCmwKcAp4CoAKlArgC0wLUAtUC1wLYAtoC3ALhAvcDEgMTAxQDFgMXAxkDGwMgAy4DSQNKA0sDTQNOA1ADUgNXA2oDhQOGA4cDiQOKA4wDjgOTA6IDvQO+A78DwQPCA8QDxgPLA98D5APzA/cD/wQIBBoEHQQiAAAAAAAAAgEAAAAAAAAAnQAAAAAAAAAAAAAAAAAABCQ=

contexts: 
  license_url: "{{ lookup('lastpass', 'License:Contexts', field='Website') }}"

viscosity: 
  - Cohoot
  - SellerCrowd
  - ExpressVPN - Denver
  - ExpressVPN - New Jersey 1
  - ExpressVPN - New Jersey 3